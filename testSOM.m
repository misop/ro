% Solve a Clustering Problem with a Self-Organizing Map
% Script generated by NCTOOL
% Created Mon Apr 22 10:12:12 CEST 2013
%
% This script assumes these variables are defined:
%
%   mushs - input data.

%testujeme napriklad jedlost co je parameter 1
%nacitas si huby
%rozdelis databazu na casti napr 4
%spojis 3 casti vytiahnes parameter co chces testovat
%[c, mushs] = takeColumn(3casti_shrooms, 1);
%nechas natrenovat mapu (ten kod zbehne ako je ak to mas nazvane mushs
%vytiahnes z tej vynechanej mnoziny ten isty stlpec
%[c2, test] = takeColumn(1_shrooms, 1);
%ta testovacia cast zacina od test
%zatial ti iba vypocita vektor ktore klasifikoval spravne a da succes rate
%este treba zistit ako z toho vyrobyt ROC krivku :)
%opakujes 4 krat tak aby kazda cast databazi raz bola ako testovacia

%sem das trenovaciu mnozinu bez stlpika co sa ma zistovat
inputs = mushs';
%sem das testovaciu mnozinu bez stlpika co sa ma zistovat
test = mushs';
%sem das stlpik testovacej mnoziny co sa ma testovat
c = c;
%sem das stlpik testovacej mnoziny co sa ma testovat prekonvertovany
%output2binary
cT = output2binary(c);
%snad je ROC krivka dobre porvnaj s neuronkami :D
%kolko roznych hodnot mozes mat
k = 7;

% Create a Self-Organizing Map
dimension1 = 10;
dimension2 = 10;
net = selforgmap([dimension1 dimension2]);

% Train the Network
[net,tr] = train(net,inputs);

% Test the Network
%outputs = net(inputs);
%suma = sum(outputs');

% vyber udajov s hodnotou 1(jedle)
% treba pridat pomer
% nasobit cisla pomerom



%sums su pre kazdy druh co ti moze vyjst kolko ich urcil do ktorej casti
%mapy
sums = zeros(k, dimension1*dimension2);
for i = 1:k
    idx = [];
    idx = (c(:,1)==i);
    mushsT = mushs(idx, :);
    out = net(mushsT');
    figure, plotsomhits(net,mushsT')
    sums(i, :) = sum(out');
end


out = net(test);
% out = out';
[m,n] = size(mushs);
%correct je boolean matica tych co urcil spravne
correct = [];
outs = [];
for i = 1:m
    idx = (out(:,i)==1);
    [maxim, ind] = max(sums(:, idx));
    correct = [correct (ind == c(i))];
    outs = [outs ind];
end;
rate = sum(correct)/m
outputs = output2binary(outs');
%malo by vyratat roc krivku este ju musis zobrazit :)
%[tpr,fpr,thresholds] = roc(cT,outputs);
figure; plotroc(cT, outputs);

% View the Network
% view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotsomtop(net)
%figure, plotsomnc(net)
%figure, plotsomnd(net)
%figure, plotsomplanes(net)
%figure, plotsomhits(net,mushsT2')
%figure, plotsompos(net,inputs)
